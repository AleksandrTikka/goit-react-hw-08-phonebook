{"version":3,"file":"static/js/529.c4df194b.chunk.js","mappings":"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","sources":["components/Box.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/App/App.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/GlobalStyle.jsx","components/Section/Section.styled.js","components/Section/Section.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography\n);\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const normalizeFilter = filter && filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  //   display: flex;\n  //   justify-content: space-between;\n  //   align-items: center;\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n\n  color: ${p => p.theme.colors.accent};\n\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const Error = styled.div`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.heading};\n`;\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[3]}px;\n  min-width: 150px;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n  background-color: ${p => p.theme.colors.bgButton};\n\n  :hover,\n  :focus {\n    background-color: ${p => p.theme.colors.bgButtonHover};\n\n    outline: ${p => p.theme.borders.bold};\n    outline-color: ${p => p.theme.colors.heading};\n  }\n`;\n","import styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Label, Error } from './ContactForm.styled';\nimport { Btn } from 'components/App/App.styled';\nimport { Box } from '../Box';\n\nconst Input = styled(Field)`\n  width: 100%;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n  :hover,\n  :focus {\n    outline: ${p => p.theme.borders.bold};\n    outline-color: ${p => p.theme.colors.heading};\n  }\n`;\n\nconst errorName =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nconst errorNumber =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\nconst regularName =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n// const regularNumber =\n//   /+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}/;\n\nconst schema = yup.object().shape({\n  name: yup.string().required('input is required').matches(regularName, {\n    message: errorName,\n  }),\n  number: yup\n    .string()\n    .required('input is required')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      {\n        message: errorNumber,\n      }\n    ),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleFormSubmit = values => {\n    const compareContact = contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    compareContact\n      ? alert(`${values.name} is already in contacts`)\n      : dispatch(addContact(values));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        handleFormSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Box mb={4} display=\"flex\" flexDirection=\"column\">\n          <Label htmlFor=\"name\">\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              // value={this.state.name}\n              // onChange={this.handleInputChange}\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              // required\n            />\n            <ErrorMessage\n              name=\"name\"\n              render={msg => <Error>{errorName}</Error>}\n            />\n          </Label>\n          <Label htmlFor=\"number\">\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              // value={this.state.number}\n              // onChange={this.handleInputChange}\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              // required\n            />\n            <ErrorMessage\n              name=\"number\"\n              render={msg => <Error>{errorNumber}</Error>}\n            />\n          </Label>\n        </Box>\n        <Btn type=\"submit\" name=\"addContact\">\n          Add contact\n        </Btn>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${p => p.theme.colors.accent};\n  margin-bottom: ${p => p.theme.space[5]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Input = styled.input`\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n  margin-left: auto;\n  width: 180px;\n  :hover,\n  :focus {\n    outline: ${p => p.theme.borders.bold};\n    outline-color: ${p => p.theme.colors.heading};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleChange = e => dispatch(filterContact(e.target.value));\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </Label>\n  );\n};\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { createGlobalStyle } from 'styled-components';\nimport 'normalize.css';\nexport const GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\nh1,\nh2,\nul,\np {\n  margin: 0;\n  padding: 0;\n}\n\nbutton {\n  cursor: pointer;\n  padding: 0;\n}\n\nul {\n  list-style: none;\n}\n\n`;\n","import styled from 'styled-components';\n\nexport const Paragraph = styled.div`\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const Heading = styled.h2`\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Paragraph, Heading } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Paragraph>\n      <Heading>{title}</Heading>\n      {children}\n    </Paragraph>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { Btn } from '../App/App.styled';\nimport { Item } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      {name}: {number}\n      <Btn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Btn>\n    </Item>\n  );\n};\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  display: flex;\n  flex-direction: column;\n  row-gap: ${p => p.theme.space[2]}px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactItem from 'components/ContactItem';\nimport { List } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(contact => {\n        return (\n          <ContactItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        );\n      })}\n    </List>\n  );\n};\nContactList.propTypes = {\n  contact: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactList;\n","import { Box } from 'components/Box';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\n\nimport { GlobalStyle } from 'components/GlobalStyle';\n\nimport Section from 'components/Section';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations.js';\nimport ContactList from 'components/ContactList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Box\n      textAlign=\"center\"\n      bg=\"bgApp\"\n      pt={4}\n      mx=\"auto\"\n      mt=\"50px\"\n      width=\"450px\"\n      flexWrap=\"wrap\"\n      justifyContent=\"center\"\n      border=\"normal\"\n      borderRadius=\"md\"\n      borderColor=\"border\"\n      as=\"main\"\n    >\n      <Box as=\"h1\" textAlign=\"center\" color=\"heading\" fontSize=\"l\">\n        Phonebook\n      </Box>\n      <Section>{<ContactForm />}</Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n        {contacts.length > 0 && <ContactList />}\n      </Section>\n\n      <GlobalStyle />\n    </Box>\n  );\n}\n"],"names":["Box","styled","color","space","layout","flexbox","border","typography","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","normalizeFilter","toLowerCase","contact","name","includes","Label","p","theme","fontSizes","l","fontWeights","bold","colors","accent","Error","s","normal","heading","Btn","borders","none","radii","sm","bgButton","bgButtonHover","Input","Field","errorName","errorNumber","schema","yup","shape","required","matches","message","number","initialValues","dispatch","useDispatch","useSelector","validationSchema","onSubmit","values","actions","find","alert","addContact","handleFormSubmit","resetForm","mb","display","flexDirection","htmlFor","type","render","msg","m","Filter","value","onChange","e","filterContact","target","pattern","title","prototype","PropTypes","GlobalStyle","createGlobalStyle","Paragraph","Heading","children","Item","id","onClick","deleteContact","List","visibleContacts","map","Contacts","useEffect","fetchContacts","textAlign","bg","pt","mx","mt","width","flexWrap","justifyContent","borderRadius","borderColor","as","fontSize","length"],"sourceRoot":""}