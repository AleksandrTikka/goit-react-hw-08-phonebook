{"version":3,"file":"static/js/3.68eb26a5.chunk.js","mappings":"kMAUaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,0HChBWC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EACnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMC,SAASO,MAAnB,EAEpBC,EAAwB,SAAAT,GACnC,IAAMC,EAAWF,EAAeC,GAC1BQ,EAASD,EAAaP,GACtBU,EAAkBF,GAAUA,EAAOG,cACzC,OAAOV,EAASO,QAAO,SAAAI,GAAO,OAC5BA,EAAQC,KAAKF,cAAcG,SAASJ,EADR,GAG/B,E,8BCVYK,EAAQvB,EAAAA,GAAAA,MAAH,qPAKH,SAAAwB,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,CAAtB,IACC,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IAEP,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,GAAnB,IAGS,SAAAP,GAAC,OAAIA,EAAEC,MAAMvB,MAAM,EAAlB,IAIT8B,EAAQhC,EAAAA,GAAAA,IAAH,wGACC,SAAAwB,GAAC,OAAIA,EAAEC,MAAMvB,MAAM,EAAlB,IACL,SAAAsB,GAAC,OAAIA,EAAEC,MAAMC,UAAUO,CAAtB,IACC,SAAAT,GAAC,OAAIA,EAAEC,MAAMG,YAAYM,MAAxB,IACP,SAAAV,GAAC,OAAIA,EAAEC,MAAMK,OAAOK,OAAnB,I,uCCPNC,GAAQpC,EAAAA,EAAAA,IAAOqC,EAAAA,GAAPrC,CAAH,uJAEC,SAAAwB,GAAC,OAAIA,EAAEC,MAAMa,QAAQC,IAApB,IACM,SAAAf,GAAC,OAAIA,EAAEC,MAAMe,MAAMC,EAAlB,IAGL,SAAAjB,GAAC,OAAIA,EAAEC,MAAMa,QAAQT,IAApB,IACK,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,OAAOK,OAAnB,IAIhBO,EACJ,4JACIC,EACJ,kHAMIC,EAASC,EAAAA,KAAaC,MAAM,CAChCzB,KAAMwB,EAAAA,KAAaE,SAAS,qBAAqBC,QALjD,yHAKsE,CACpEC,QAASP,IAEXQ,OAAQL,EAAAA,KAELE,SAAS,qBACTC,QACC,6EACA,CACEC,QAASN,MAKXQ,EAAgB,CACpB9B,KAAM,GACN6B,OAAQ,IAqEV,EAlEoB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,MACX5C,GAAW6C,EAAAA,EAAAA,IAAY/C,GAY7B,OACE,SAAC,KAAD,CACE4C,cAAeA,EACfI,iBAAkBX,EAClBY,SAAU,SAACC,EAAQC,IAdE,SAAAD,GACAhD,EAASkD,MAC9B,SAAAvC,GAAO,OAAIA,EAAQC,KAAKF,gBAAkBsC,EAAOpC,KAAKF,aAA/C,IAILyC,EAAAA,GAAAA,MAAA,UAAeH,EAAOpC,KAAtB,4BACA+B,GAASS,EAAAA,EAAAA,IAAWJ,GACzB,CAOKK,CAAiBL,GACjBC,EAAQK,WACT,EANH,UAQE,UAAC,KAAD,YACE,UAAChE,EAAA,EAAD,CAAKiE,GAAI,EAAGC,QAAQ,OAAOC,cAAc,SAAzC,WACE,UAAC3C,EAAD,CAAO4C,QAAQ,OAAf,kBAEE,SAAC/B,EAAD,CACEgC,KAAK,OACL/C,KAAK,OACLgD,YAAY,gBAKd,SAAC,KAAD,CACEhD,KAAK,OACLiD,OAAQ,SAAAC,GAAG,OAAI,SAACvC,EAAD,UAAQU,GAAZ,QAGf,UAACnB,EAAD,CAAO4C,QAAQ,SAAf,oBAEE,SAAC/B,EAAD,CACEgC,KAAK,MACL/C,KAAK,SACLgD,YAAY,kBAKd,SAAC,KAAD,CACEhD,KAAK,SACLiD,OAAQ,SAAAC,GAAG,OAAI,SAACvC,EAAD,UAAQW,GAAZ,WAIjB,SAAC5C,EAAA,EAAD,CAAKkE,QAAQ,OAAOO,eAAe,SAAnC,UACE,SAACC,EAAA,EAAD,CAAYxE,MAAM,UAAUmE,KAAK,SAAS/C,KAAK,aAA/C,UACE,SAACqD,EAAA,EAAD,YAMX,E,6BCpHYnD,EAAQvB,EAAAA,GAAAA,MAAH,yMAKP,SAAAwB,GAAC,OAAIA,EAAEC,MAAMK,OAAOC,GAAnB,IACO,SAAAP,GAAC,OAAIA,EAAEC,MAAMvB,MAAM,EAAlB,IACL,SAAAsB,GAAC,OAAIA,EAAEC,MAAMC,UAAUiD,CAAtB,IACC,SAAAnD,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IAGLO,EAAQpC,EAAAA,GAAAA,MAAH,6KACN,SAAAwB,GAAC,OAAIA,EAAEC,MAAMa,QAAQC,IAApB,IACM,SAAAf,GAAC,OAAIA,EAAEC,MAAMe,MAAMC,EAAlB,IAKL,SAAAjB,GAAC,OAAIA,EAAEC,MAAMa,QAAQT,IAApB,IACK,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,OAAOK,OAAnB,ICdhByC,EAAS,WACb,IAAMxB,GAAWC,EAAAA,EAAAA,MACXrC,GAASsC,EAAAA,EAAAA,IAAYvC,GAG3B,OACE,SAAChB,EAAA,EAAD,CAAKiE,GAAI,EAAGC,QAAQ,OAAOC,cAAc,SAAzC,UACE,UAAC,EAAD,oCAEE,SAAC,EAAD,CACEE,KAAK,OACL/C,KAAK,SACLwD,MAAO7D,EACP8D,SAVa,SAAAC,GAAC,OAAI3B,GAAS4B,EAAAA,EAAAA,GAAcD,EAAEE,OAAOJ,OAApC,EAWdK,QAAQ,yHACRC,MAAM,yIACNpC,UAAQ,QAKjB,EACD6B,EAAOQ,UAAY,CACjBP,MAAOQ,IAAAA,OAAAA,WACPP,SAAUO,IAAAA,KAAAA,YAGZ,I,QAAA,I,oBChCaC,EAAYtF,EAAAA,GAAAA,IAAH,yEACJ,SAAAwB,GAAC,OAAIA,EAAEC,MAAMvB,MAAM,EAAlB,IACA,SAAAsB,GAAC,OAAIA,EAAEC,MAAMvB,MAAM,EAAlB,IAGPqF,EAAUvF,EAAAA,GAAAA,GAAH,sFACJ,SAAAwB,GAAC,OAAIA,EAAEC,MAAMvB,MAAM,EAAlB,IACE,SAAAsB,GAAC,OAAIA,EAAEC,MAAMvB,MAAM,EAAlB,IACT,SAAAsB,GAAC,OAAIA,EAAEC,MAAMK,OAAOK,OAAnB,ICQZ,EAdgB,SAAC,GAAyB,IAAvBgD,EAAsB,EAAtBA,MAAOK,EAAe,EAAfA,SACxB,OACE,UAACF,EAAD,YACE,SAACC,EAAD,UAAUJ,IACTK,IAGN,E,SCTYC,EAAOzF,EAAAA,GAAAA,GAAH,qG,UCuCjB,EAjCoB,SAAC,GAA0B,IAAxBqB,EAAuB,EAAvBA,KAAM6B,EAAiB,EAAjBA,OAAQwC,EAAS,EAATA,GACnC,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMzC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACoC,EAAD,WACGpE,EADH,KACW6B,EACR0C,GACC,wCAEA,SAACnB,EAAA,EAAD,CACEqB,KAAK,QACL7F,MAAM,QACNmE,KAAK,SACL2B,QAAS,WACPF,GAAY,GACZzC,GAAS4C,EAAAA,EAAAA,IAAcN,GACxB,EACDO,SAAUL,EARZ,UAUE,SAACM,EAAA,EAAD,CAA2BC,SAAS,cAK7C,EChCYC,EAAOpG,EAAAA,GAAAA,GAAH,iHACE,SAAAwB,GAAC,OAAIA,EAAEC,MAAMvB,MAAM,EAAlB,IAGP,SAAAsB,GAAC,OAAIA,EAAEC,MAAMvB,MAAM,EAAlB,ICwBd,EAxBoB,WAClB,IAAMmG,GAAkB/C,EAAAA,EAAAA,IAAYrC,GAEpC,OACE,SAACmF,EAAD,UACGC,EAAgBC,KAAI,SAAAlF,GACnB,OACE,SAAC,EAAD,CAEEsE,GAAItE,EAAQsE,GACZrE,KAAMD,EAAQC,KACd6B,OAAQ9B,EAAQ8B,QAHX9B,EAAQsE,GAMlB,KAGN,ECPc,SAASa,KACtB,IAAMnD,GAAWC,EAAAA,EAAAA,MACX5C,GAAW6C,EAAAA,EAAAA,IAAY/C,GACvBK,GAAY0C,EAAAA,EAAAA,IAAY3C,GACxBG,GAAQwC,EAAAA,EAAAA,IAAYzC,GAK1B,OAHA2F,EAAAA,EAAAA,YAAU,WACRpD,GAASqD,EAAAA,EAAAA,MACV,GAAE,CAACrD,KAEF,UAACrD,EAAA,EAAD,CACE2G,UAAU,SACVC,GAAG,QACHC,GAAI,EACJC,GAAG,OACHC,GAAG,OACHC,MAAM,QACNC,SAAS,OACTxC,eAAe,SACfnE,OAAO,SACP4G,aAAa,KACbC,YAAY,SACZC,GAAG,OAZL,WAcE,SAACpH,EAAA,EAAD,CAAKoH,GAAG,KAAKT,UAAU,SAASzG,MAAM,UAAUkG,SAAS,IAAzD,wBAGA,SAAC,EAAD,WAAU,SAAC,EAAD,OACV,UAAC,EAAD,CAAShB,MAAM,WAAf,WACE,SAAC,EAAD,IACCvE,IACC,SAACb,EAAA,EAAD,CACEkE,QAAQ,OACRO,eAAe,SACf4C,SAAS,WACTC,IAAK,EAJP,UAME,SAAC,KAAD,CACEC,OAAO,KACPP,MAAM,KACNQ,OAAO,IACPtH,MAAM,UACNuH,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,MAId7G,IAAS,uBAAIA,IACbL,EAASmH,OAAS,GACjB,SAAC,EAAD,KAEA,SAAC7H,EAAA,EAAD,CAAKiE,GAAI,EAAT,4CAKT,C","sources":["components/Box.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Section/Section.styled.js","components/Section/Section.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography\n);\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const normalizeFilter = filter && filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  // display: flex;\n  // justify-content: space-between;\n  // align-items: center;\n  text-align: left;\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n\n  color: ${p => p.theme.colors.nav};\n\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const Error = styled.div`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.normal};\n  color: ${p => p.theme.colors.heading};\n`;\n","import styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Label, Error } from './ContactForm.styled';\n\nimport { Box } from '../Box';\nimport IconButton from '@mui/material/IconButton';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport toast from 'react-hot-toast';\n\nconst Input = styled(Field)`\n  width: 100%;\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n  :hover,\n  :focus {\n    outline: ${p => p.theme.borders.bold};\n    outline-color: ${p => p.theme.colors.heading};\n  }\n`;\n\nconst errorName =\n  \"Name is required and it may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nconst errorNumber =\n  'Phone number is required and it must be digits and can contain spaces, dashes, parentheses and can start with +';\nconst regularName =\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n// const regularNumber =\n//   /+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}/;\n\nconst schema = yup.object().shape({\n  name: yup.string().required('input is required').matches(regularName, {\n    message: errorName,\n  }),\n  number: yup\n    .string()\n    .required('input is required')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      {\n        message: errorNumber,\n      }\n    ),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleFormSubmit = values => {\n    const compareContact = contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    compareContact\n      ? toast.error(`${values.name} is already in contacts`)\n      : dispatch(addContact(values));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        handleFormSubmit(values);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <Box mb={4} display=\"flex\" flexDirection=\"column\">\n          <Label htmlFor=\"name\">\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"enter name\"\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              // required\n            />\n            <ErrorMessage\n              name=\"name\"\n              render={msg => <Error>{errorName}</Error>}\n            />\n          </Label>\n          <Label htmlFor=\"number\">\n            Number\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"enter number\"\n              // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              // required\n            />\n            <ErrorMessage\n              name=\"number\"\n              render={msg => <Error>{errorNumber}</Error>}\n            />\n          </Label>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <IconButton color=\"success\" type=\"submit\" name=\"addContact\">\n            <AddCircleIcon />\n          </IconButton>\n        </Box>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: ${p => p.theme.colors.nav};\n  margin-bottom: ${p => p.theme.space[5]}px;\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Input = styled.input`\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.sm};\n  margin-left: auto;\n  width: 100%;\n  :hover,\n  :focus {\n    outline: ${p => p.theme.borders.bold};\n    outline-color: ${p => p.theme.colors.heading};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\nimport { Box } from '../Box';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleChange = e => dispatch(filterContact(e.target.value));\n\n  return (\n    <Box mb={4} display=\"flex\" flexDirection=\"column\">\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n    </Box>\n  );\n};\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Paragraph = styled.div`\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n`;\n\nexport const Heading = styled.h2`\n  margin-top: ${p => p.theme.space[4]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  color: ${p => p.theme.colors.heading};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Paragraph, Heading } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Paragraph>\n      <Heading>{title}</Heading>\n      {children}\n    </Paragraph>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n","import { Item } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\n\nconst ContactItem = ({ name, number, id }) => {\n  const [deleting, setDeleting] = useState(false);\n\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      {name}: {number}\n      {deleting ? (\n        <p>Deleting...</p>\n      ) : (\n        <IconButton\n          size=\"small\"\n          color=\"error\"\n          type=\"button\"\n          onClick={() => {\n            setDeleting(true);\n            dispatch(deleteContact(id));\n          }}\n          disabled={deleting}\n        >\n          <DeleteForeverOutlinedIcon fontSize=\"small\" />\n        </IconButton>\n      )}\n    </Item>\n  );\n};\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-bottom: ${p => p.theme.space[4]}px;\n  display: flex;\n  flex-direction: column;\n  row-gap: ${p => p.theme.space[2]}px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactItem from 'components/ContactItem';\nimport { List } from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(contact => {\n        return (\n          <ContactItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        );\n      })}\n    </List>\n  );\n};\nContactList.propTypes = {\n  contact: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactList;\n","import { Box } from 'components/Box';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport { ThreeDots } from 'react-loader-spinner';\n\nimport Section from 'components/Section';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations.js';\nimport ContactList from 'components/ContactList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Box\n      textAlign=\"center\"\n      bg=\"bgApp\"\n      pt={4}\n      mx=\"auto\"\n      mt=\"50px\"\n      width=\"350px\"\n      flexWrap=\"wrap\"\n      justifyContent=\"center\"\n      border=\"normal\"\n      borderRadius=\"md\"\n      borderColor=\"border\"\n      as=\"main\"\n    >\n      <Box as=\"h1\" textAlign=\"center\" color=\"heading\" fontSize=\"l\">\n        Phonebook\n      </Box>\n      <Section>{<ContactForm />}</Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        {isLoading && (\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            position=\"absolute\"\n            top={3}\n          >\n            <ThreeDots\n              height=\"80\"\n              width=\"80\"\n              radius=\"9\"\n              color=\"#4fa94d\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          </Box>\n        )}\n        {error && <p>{error}</p>}\n        {contacts.length > 0 ? (\n          <ContactList />\n        ) : (\n          <Box mb={4}>contacts not added yet...</Box>\n        )}\n      </Section>\n    </Box>\n  );\n}\n"],"names":["Box","styled","color","space","layout","flexbox","border","typography","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","normalizeFilter","toLowerCase","contact","name","includes","Label","p","theme","fontSizes","l","fontWeights","bold","colors","nav","Error","s","normal","heading","Input","Field","borders","none","radii","sm","errorName","errorNumber","schema","yup","shape","required","matches","message","number","initialValues","dispatch","useDispatch","useSelector","validationSchema","onSubmit","values","actions","find","toast","addContact","handleFormSubmit","resetForm","mb","display","flexDirection","htmlFor","type","placeholder","render","msg","justifyContent","IconButton","AddCircle","m","Filter","value","onChange","e","filterContact","target","pattern","title","prototype","PropTypes","Paragraph","Heading","children","Item","id","useState","deleting","setDeleting","size","onClick","deleteContact","disabled","DeleteForeverOutlined","fontSize","List","visibleContacts","map","Contacts","useEffect","fetchContacts","textAlign","bg","pt","mx","mt","width","flexWrap","borderRadius","borderColor","as","position","top","height","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","length"],"sourceRoot":""}